version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "ap-south-1"
    CRM_ECR_REPO: "615299768302.dkr.ecr.ap-south-1.amazonaws.com/itsoftlab-app"
    S3_ENV_BUCKET: "secure-env-files-itsoftlab"

phases:
  pre_build:
    commands:
      - set -e # Stop execution on failure

      - echo "ðŸ”¹ Checking Docker status..."
      - docker info

      - echo "ðŸ”¹ Logging into AWS ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $CRM_ECR_REPO

      - echo "â†’ Will fetch s3://$S3_ENV_BUCKET/$FRONTEND_SECRET_KEY"

      - echo "ðŸ”¹ Downloading .env from S3..."
      - aws s3 cp "s3://$S3_ENV_BUCKET/$FRONTEND_SECRET_KEY" ./app.env --region $AWS_DEFAULT_REGION
      - chmod 600 ./app.env

      - echo "ðŸ”¹ Exporting REACT_APP_* vars"
      - |
        for VAR in REACT_APP_BACKEND_URL ; do
          # Get the value from the .env file and export it
          VAR_VALUE=$(grep -E "^$VAR=" app.env | cut -d'=' -f2-)
          eval export $VAR="$VAR_VALUE"
        done

  build:
    commands:
      - set -e # Stop execution on failure

      - echo "ðŸ”¹ Building frontend Docker image..."

      - |
        docker build \
         --build-arg REACT_APP_BACKEND_URL="$REACT_APP_BACKEND_URL" \
         --build-arg REACT_APP_VERSION="$TAG_NAME" \
         --build-arg NODE_ENV="$ENVIRONMENT" \
         -t $FRONTEND_TAG -f react-admin-dashboard-master/Dockerfile \
         react-admin-dashboard-master

      - echo "ðŸ”¹ Building backend Docker image..."
      - |
        docker build \
        --build-arg APP_VERSION="$TAG_NAME" \
        --build-arg DEV_ENV="$ENVIRONMENT" \
        -t $BACKEND_TAG ./backend

  post_build:
    commands:
      - set -e # Stop execution on failure

      - echo "ðŸ”¹ Tagging and pushing frontend image..."
      - docker tag $FRONTEND_TAG $CRM_ECR_REPO:$FRONTEND_TAG
      - docker push $CRM_ECR_REPO:$FRONTEND_TAG

      - echo "ðŸ”¹ Tagging and pushing backend image..."
      - docker tag $BACKEND_TAG $CRM_ECR_REPO:$BACKEND_TAG
      - docker push $CRM_ECR_REPO:$BACKEND_TAG

artifacts:
  files:
    - imagedefinitions.json
