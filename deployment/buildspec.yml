version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "ap-south-1"
    CRM_ECR_REPO: "615299768302.dkr.ecr.ap-south-1.amazonaws.com/itsoftlab-app"

phases:
  pre_build:
    commands:
      - set -e # Stop execution on failure

      - echo "ðŸ”¹ Checking Docker status..."
      - docker info

      - echo "ðŸ”¹ Logging into AWS ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $CRM_ECR_REPO

      - echo "ðŸ”¹ Determining Secrets ARN based on environment..."
      # - |
      #   if [ "$ENVIRONMENT" = "production" ]; then
      #     SECRET_ARN="arn:aws:secretsmanager:ap-south-1:615299768302:secret:crm-frontend-env-Qt8AAo"
      #   else
      #     SECRET_ARN="arn:aws:secretsmanager:ap-south-1:615299768302:secret:crm-frontend-env-Qt8AAo"
      #   fi
      #   echo "Using Secrets ARN: $SECRET_ARN"

      # - echo "ðŸ”¹ Fetching secrets from AWS Secrets Manager..."
      # - |
      #   SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id $SECRET_ARN --query SecretString --output text)
      #   for VAR in REACT_APP_BACKEND_URL ; do
      #     export $VAR=$(echo $SECRET_JSON | jq -r .$VAR)
      #   done

  build:
    commands:
      - set -e # Stop execution on failure

      - echo "ðŸ”¹ Building frontend Docker image..."

      # - |
      #   docker build \
      #    --build-arg REACT_APP_BACKEND_URL="$REACT_APP_BACKEND_URL" \
      #    --build-arg REACT_APP_VERSION="$TAG_NAME" \
      #    --build-arg NODE_ENV="$ENVIRONMENT" \
      #    -t $FRONTEND_TAG -f react-admin-dashboard-master/Dockerfile \
      #    react-admin-dashboard-master

      - |
        docker build \
         --build-arg REACT_APP_VERSION="$TAG_NAME" \
         --build-arg NODE_ENV="$ENVIRONMENT" \
         -t $FRONTEND_TAG -f frontend/Dockerfile \
         frontend

      - echo "ðŸ”¹ Building backend Docker image..."
      - |
        docker build \
        --build-arg APP_VERSION="$TAG_NAME" \
        --build-arg DEV_ENV="$ENVIRONMENT" \
        -t $BACKEND_TAG ./backend

  post_build:
    commands:
      - set -e # Stop execution on failure

      - echo "ðŸ”¹ Tagging and pushing frontend image..."
      - docker tag $FRONTEND_TAG $CRM_ECR_REPO:$FRONTEND_TAG
      - docker push $CRM_ECR_REPO:$FRONTEND_TAG

      - echo "ðŸ”¹ Tagging and pushing backend image..."
      - docker tag $BACKEND_TAG $CRM_ECR_REPO:$BACKEND_TAG
      - docker push $CRM_ECR_REPO:$BACKEND_TAG

artifacts:
  files:
    - imagedefinitions.json
